<?php

namespace Proxies\__CG__\Dmcl\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StreamingServers extends \Dmcl\AppBundle\Entity\StreamingServers implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'serverName', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'domainName', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'serverIp', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'vpnIp', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'sshPassword', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'sshPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'diffTimeMain', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpBroadcastPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'totalClients', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'systemOs', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'networkInterface', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'latency', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'status', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'enableGeoip', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'geoipCountries', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'lastCheckAgo', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'canDelete', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'serverHardware', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'totalServices', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'persistentConnections', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'rtmpPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'geoipType', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'ispNames', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'ispType', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'enableIsp', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'boostFpm', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpPortsAdd', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'networkGuaranteedSpeed', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpsBroadcastPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpsPortsAdd', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'whitelistIps', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'watchdogData', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'timeshiftOnly'];
        }

        return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'serverName', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'domainName', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'serverIp', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'vpnIp', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'sshPassword', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'sshPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'diffTimeMain', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpBroadcastPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'totalClients', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'systemOs', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'networkInterface', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'latency', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'status', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'enableGeoip', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'geoipCountries', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'lastCheckAgo', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'canDelete', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'serverHardware', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'totalServices', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'persistentConnections', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'rtmpPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'geoipType', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'ispNames', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'ispType', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'enableIsp', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'boostFpm', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpPortsAdd', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'networkGuaranteedSpeed', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpsBroadcastPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'httpsPortsAdd', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'whitelistIps', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'watchdogData', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\StreamingServers' . "\0" . 'timeshiftOnly'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StreamingServers $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setServerName($serverName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServerName', [$serverName]);

        return parent::setServerName($serverName);
    }

    /**
     * {@inheritDoc}
     */
    public function getServerName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServerName', []);

        return parent::getServerName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomainName($domainName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomainName', [$domainName]);

        return parent::setDomainName($domainName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomainName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomainName', []);

        return parent::getDomainName();
    }

    /**
     * {@inheritDoc}
     */
    public function setServerIp($serverIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServerIp', [$serverIp]);

        return parent::setServerIp($serverIp);
    }

    /**
     * {@inheritDoc}
     */
    public function getServerIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServerIp', []);

        return parent::getServerIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setVpnIp($vpnIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVpnIp', [$vpnIp]);

        return parent::setVpnIp($vpnIp);
    }

    /**
     * {@inheritDoc}
     */
    public function getVpnIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVpnIp', []);

        return parent::getVpnIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setSshPassword($sshPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSshPassword', [$sshPassword]);

        return parent::setSshPassword($sshPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getSshPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSshPassword', []);

        return parent::getSshPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setSshPort($sshPort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSshPort', [$sshPort]);

        return parent::setSshPort($sshPort);
    }

    /**
     * {@inheritDoc}
     */
    public function getSshPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSshPort', []);

        return parent::getSshPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiffTimeMain($diffTimeMain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiffTimeMain', [$diffTimeMain]);

        return parent::setDiffTimeMain($diffTimeMain);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiffTimeMain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiffTimeMain', []);

        return parent::getDiffTimeMain();
    }

    /**
     * {@inheritDoc}
     */
    public function setHttpBroadcastPort($httpBroadcastPort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHttpBroadcastPort', [$httpBroadcastPort]);

        return parent::setHttpBroadcastPort($httpBroadcastPort);
    }

    /**
     * {@inheritDoc}
     */
    public function getHttpBroadcastPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHttpBroadcastPort', []);

        return parent::getHttpBroadcastPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalClients($totalClients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalClients', [$totalClients]);

        return parent::setTotalClients($totalClients);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalClients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalClients', []);

        return parent::getTotalClients();
    }

    /**
     * {@inheritDoc}
     */
    public function setSystemOs($systemOs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSystemOs', [$systemOs]);

        return parent::setSystemOs($systemOs);
    }

    /**
     * {@inheritDoc}
     */
    public function getSystemOs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSystemOs', []);

        return parent::getSystemOs();
    }

    /**
     * {@inheritDoc}
     */
    public function setNetworkInterface($networkInterface)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNetworkInterface', [$networkInterface]);

        return parent::setNetworkInterface($networkInterface);
    }

    /**
     * {@inheritDoc}
     */
    public function getNetworkInterface()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNetworkInterface', []);

        return parent::getNetworkInterface();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatency($latency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatency', [$latency]);

        return parent::setLatency($latency);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatency', []);

        return parent::getLatency();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnableGeoip($enableGeoip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnableGeoip', [$enableGeoip]);

        return parent::setEnableGeoip($enableGeoip);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnableGeoip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnableGeoip', []);

        return parent::getEnableGeoip();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeoipCountries($geoipCountries)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeoipCountries', [$geoipCountries]);

        return parent::setGeoipCountries($geoipCountries);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeoipCountries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeoipCountries', []);

        return parent::getGeoipCountries();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastCheckAgo($lastCheckAgo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastCheckAgo', [$lastCheckAgo]);

        return parent::setLastCheckAgo($lastCheckAgo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastCheckAgo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastCheckAgo', []);

        return parent::getLastCheckAgo();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanDelete($canDelete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanDelete', [$canDelete]);

        return parent::setCanDelete($canDelete);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanDelete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanDelete', []);

        return parent::getCanDelete();
    }

    /**
     * {@inheritDoc}
     */
    public function setServerHardware($serverHardware)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServerHardware', [$serverHardware]);

        return parent::setServerHardware($serverHardware);
    }

    /**
     * {@inheritDoc}
     */
    public function getServerHardware()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServerHardware', []);

        return parent::getServerHardware();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalServices($totalServices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalServices', [$totalServices]);

        return parent::setTotalServices($totalServices);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalServices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalServices', []);

        return parent::getTotalServices();
    }

    /**
     * {@inheritDoc}
     */
    public function setPersistentConnections($persistentConnections)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPersistentConnections', [$persistentConnections]);

        return parent::setPersistentConnections($persistentConnections);
    }

    /**
     * {@inheritDoc}
     */
    public function getPersistentConnections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersistentConnections', []);

        return parent::getPersistentConnections();
    }

    /**
     * {@inheritDoc}
     */
    public function setRtmpPort($rtmpPort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRtmpPort', [$rtmpPort]);

        return parent::setRtmpPort($rtmpPort);
    }

    /**
     * {@inheritDoc}
     */
    public function getRtmpPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRtmpPort', []);

        return parent::getRtmpPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeoipType($geoipType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeoipType', [$geoipType]);

        return parent::setGeoipType($geoipType);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeoipType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeoipType', []);

        return parent::getGeoipType();
    }

    /**
     * {@inheritDoc}
     */
    public function setIspNames($ispNames)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIspNames', [$ispNames]);

        return parent::setIspNames($ispNames);
    }

    /**
     * {@inheritDoc}
     */
    public function getIspNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIspNames', []);

        return parent::getIspNames();
    }

    /**
     * {@inheritDoc}
     */
    public function setIspType($ispType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIspType', [$ispType]);

        return parent::setIspType($ispType);
    }

    /**
     * {@inheritDoc}
     */
    public function getIspType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIspType', []);

        return parent::getIspType();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnableIsp($enableIsp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnableIsp', [$enableIsp]);

        return parent::setEnableIsp($enableIsp);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnableIsp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnableIsp', []);

        return parent::getEnableIsp();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoostFpm($boostFpm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoostFpm', [$boostFpm]);

        return parent::setBoostFpm($boostFpm);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoostFpm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoostFpm', []);

        return parent::getBoostFpm();
    }

    /**
     * {@inheritDoc}
     */
    public function setHttpPortsAdd($httpPortsAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHttpPortsAdd', [$httpPortsAdd]);

        return parent::setHttpPortsAdd($httpPortsAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getHttpPortsAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHttpPortsAdd', []);

        return parent::getHttpPortsAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function setNetworkGuaranteedSpeed($networkGuaranteedSpeed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNetworkGuaranteedSpeed', [$networkGuaranteedSpeed]);

        return parent::setNetworkGuaranteedSpeed($networkGuaranteedSpeed);
    }

    /**
     * {@inheritDoc}
     */
    public function getNetworkGuaranteedSpeed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNetworkGuaranteedSpeed', []);

        return parent::getNetworkGuaranteedSpeed();
    }

    /**
     * {@inheritDoc}
     */
    public function setHttpsBroadcastPort($httpsBroadcastPort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHttpsBroadcastPort', [$httpsBroadcastPort]);

        return parent::setHttpsBroadcastPort($httpsBroadcastPort);
    }

    /**
     * {@inheritDoc}
     */
    public function getHttpsBroadcastPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHttpsBroadcastPort', []);

        return parent::getHttpsBroadcastPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setHttpsPortsAdd($httpsPortsAdd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHttpsPortsAdd', [$httpsPortsAdd]);

        return parent::setHttpsPortsAdd($httpsPortsAdd);
    }

    /**
     * {@inheritDoc}
     */
    public function getHttpsPortsAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHttpsPortsAdd', []);

        return parent::getHttpsPortsAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function setWhitelistIps($whitelistIps)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWhitelistIps', [$whitelistIps]);

        return parent::setWhitelistIps($whitelistIps);
    }

    /**
     * {@inheritDoc}
     */
    public function getWhitelistIps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWhitelistIps', []);

        return parent::getWhitelistIps();
    }

    /**
     * {@inheritDoc}
     */
    public function setWatchdogData($watchdogData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWatchdogData', [$watchdogData]);

        return parent::setWatchdogData($watchdogData);
    }

    /**
     * {@inheritDoc}
     */
    public function getWatchdogData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWatchdogData', []);

        return parent::getWatchdogData();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimeshiftOnly($timeshiftOnly)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimeshiftOnly', [$timeshiftOnly]);

        return parent::setTimeshiftOnly($timeshiftOnly);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeshiftOnly()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeshiftOnly', []);

        return parent::getTimeshiftOnly();
    }

}
