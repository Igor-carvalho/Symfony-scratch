<?php

namespace Proxies\__CG__\Dmcl\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class RegUsers extends \Dmcl\AppBundle\Entity\RegUsers implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'username', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'password', 'email', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'ip', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'dateRegistered', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'verifyKey', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'lastLogin', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'verified', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'credits', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'notes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'status', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'defaultLang', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'resellerDns', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'ownerId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'overridePackages', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'google2faSec', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'salt', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'roles', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'memberGroup', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'logs', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'avatar'];
        }

        return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'username', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'password', 'email', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'ip', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'dateRegistered', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'verifyKey', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'lastLogin', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'verified', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'credits', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'notes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'status', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'defaultLang', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'resellerDns', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'ownerId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'overridePackages', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'google2faSec', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'salt', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'roles', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'memberGroup', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'logs', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\RegUsers' . "\0" . 'avatar'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (RegUsers $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setIp($ip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIp', [$ip]);

        return parent::setIp($ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', []);

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRegistered($dateRegistered)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRegistered', [$dateRegistered]);

        return parent::setDateRegistered($dateRegistered);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRegistered()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRegistered', []);

        return parent::getDateRegistered();
    }

    /**
     * {@inheritDoc}
     */
    public function setVerifyKey($verifyKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerifyKey', [$verifyKey]);

        return parent::setVerifyKey($verifyKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getVerifyKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerifyKey', []);

        return parent::getVerifyKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin($lastLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', [$lastLogin]);

        return parent::setLastLogin($lastLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', []);

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setVerified($verified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerified', [$verified]);

        return parent::setVerified($verified);
    }

    /**
     * {@inheritDoc}
     */
    public function getVerified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerified', []);

        return parent::getVerified();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredits($credits)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredits', [$credits]);

        return parent::setCredits($credits);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredits', []);

        return parent::getCredits();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLang($defaultLang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLang', [$defaultLang]);

        return parent::setDefaultLang($defaultLang);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLang', []);

        return parent::getDefaultLang();
    }

    /**
     * {@inheritDoc}
     */
    public function setResellerDns($resellerDns)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResellerDns', [$resellerDns]);

        return parent::setResellerDns($resellerDns);
    }

    /**
     * {@inheritDoc}
     */
    public function getResellerDns()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResellerDns', []);

        return parent::getResellerDns();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwnerId($ownerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwnerId', [$ownerId]);

        return parent::setOwnerId($ownerId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnerId', []);

        return parent::getOwnerId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOverridePackages($overridePackages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOverridePackages', [$overridePackages]);

        return parent::setOverridePackages($overridePackages);
    }

    /**
     * {@inheritDoc}
     */
    public function getOverridePackages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOverridePackages', []);

        return parent::getOverridePackages();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoogle2faSec($google2faSec)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoogle2faSec', [$google2faSec]);

        return parent::setGoogle2faSec($google2faSec);
    }

    /**
     * {@inheritDoc}
     */
    public function getGoogle2faSec()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoogle2faSec', []);

        return parent::getGoogle2faSec();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemberGroup($memberGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemberGroup', [$memberGroup]);

        return parent::setMemberGroup($memberGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemberGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberGroup', []);

        return parent::getMemberGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function equals(\Symfony\Component\Security\Core\User\UserInterface $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'equals', [$user]);

        return parent::equals($user);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar($avatar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', [$avatar]);

        return parent::setAvatar($avatar);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', []);

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function addLog(\Dmcl\AppBundle\Entity\RegUsers $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLog', [$logs]);

        return parent::addLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLog(\Dmcl\AppBundle\Entity\RegUserlog $logs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLog', [$logs]);

        return parent::removeLog($logs);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogs', []);

        return parent::getLogs();
    }

}
