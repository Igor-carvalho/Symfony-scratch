<?php

namespace Proxies\__CG__\Dmcl\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Streams extends \Dmcl\AppBundle\Entity\Streams implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamDisplayName', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamSource', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamIcon', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'notes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'createdChannelLocation', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'enableTranscode', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'transcodeAttributes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'customFfmpeg', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'moviePropeties', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'movieSubtitles', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'readNative', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'targetContainer', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamAll', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'removeSubtitles', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'customSid', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'channelId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'epgLang', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'order', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'autoRestart', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'pidsCreateChannel', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'cchannelRsources', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'genTimestamps', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'added', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'seriesNo', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'directSource', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'tvArchiveDuration', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'tvArchiveServerId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'tvArchivePid', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'movieSymlink', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'redirectStream', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'rtmpOutput', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'number', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'allowRecord', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'probesizeOndemand', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'customMap', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'externalPush', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'delayMinutes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'category', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'epg_id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'transcode_profile_id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'type'];
        }

        return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamDisplayName', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamSource', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamIcon', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'notes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'createdChannelLocation', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'enableTranscode', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'transcodeAttributes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'customFfmpeg', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'moviePropeties', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'movieSubtitles', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'readNative', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'targetContainer', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'streamAll', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'removeSubtitles', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'customSid', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'channelId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'epgLang', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'order', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'autoRestart', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'pidsCreateChannel', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'cchannelRsources', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'genTimestamps', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'added', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'seriesNo', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'directSource', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'tvArchiveDuration', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'tvArchiveServerId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'tvArchivePid', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'movieSymlink', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'redirectStream', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'rtmpOutput', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'number', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'allowRecord', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'probesizeOndemand', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'customMap', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'externalPush', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'delayMinutes', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'category', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'epg_id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'transcode_profile_id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Streams' . "\0" . 'type'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Streams $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreamDisplayName($streamDisplayName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreamDisplayName', [$streamDisplayName]);

        return parent::setStreamDisplayName($streamDisplayName);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreamDisplayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreamDisplayName', []);

        return parent::getStreamDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreamSource($streamSource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreamSource', [$streamSource]);

        return parent::setStreamSource($streamSource);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreamSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreamSource', []);

        return parent::getStreamSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreamIcon($streamIcon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreamIcon', [$streamIcon]);

        return parent::setStreamIcon($streamIcon);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreamIcon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreamIcon', []);

        return parent::getStreamIcon();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedChannelLocation($createdChannelLocation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedChannelLocation', [$createdChannelLocation]);

        return parent::setCreatedChannelLocation($createdChannelLocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedChannelLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedChannelLocation', []);

        return parent::getCreatedChannelLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnableTranscode($enableTranscode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnableTranscode', [$enableTranscode]);

        return parent::setEnableTranscode($enableTranscode);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnableTranscode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnableTranscode', []);

        return parent::getEnableTranscode();
    }

    /**
     * {@inheritDoc}
     */
    public function setTranscodeAttributes($transcodeAttributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTranscodeAttributes', [$transcodeAttributes]);

        return parent::setTranscodeAttributes($transcodeAttributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getTranscodeAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranscodeAttributes', []);

        return parent::getTranscodeAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomFfmpeg($customFfmpeg)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomFfmpeg', [$customFfmpeg]);

        return parent::setCustomFfmpeg($customFfmpeg);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomFfmpeg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomFfmpeg', []);

        return parent::getCustomFfmpeg();
    }

    /**
     * {@inheritDoc}
     */
    public function setMoviePropeties($moviePropeties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMoviePropeties', [$moviePropeties]);

        return parent::setMoviePropeties($moviePropeties);
    }

    /**
     * {@inheritDoc}
     */
    public function getMoviePropeties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMoviePropeties', []);

        return parent::getMoviePropeties();
    }

    /**
     * {@inheritDoc}
     */
    public function setMovieSubtitles($movieSubtitles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMovieSubtitles', [$movieSubtitles]);

        return parent::setMovieSubtitles($movieSubtitles);
    }

    /**
     * {@inheritDoc}
     */
    public function getMovieSubtitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMovieSubtitles', []);

        return parent::getMovieSubtitles();
    }

    /**
     * {@inheritDoc}
     */
    public function setReadNative($readNative)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadNative', [$readNative]);

        return parent::setReadNative($readNative);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadNative()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadNative', []);

        return parent::getReadNative();
    }

    /**
     * {@inheritDoc}
     */
    public function setTargetContainer($targetContainer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTargetContainer', [$targetContainer]);

        return parent::setTargetContainer($targetContainer);
    }

    /**
     * {@inheritDoc}
     */
    public function getTargetContainer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTargetContainer', []);

        return parent::getTargetContainer();
    }

    /**
     * {@inheritDoc}
     */
    public function setStreamAll($streamAll)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStreamAll', [$streamAll]);

        return parent::setStreamAll($streamAll);
    }

    /**
     * {@inheritDoc}
     */
    public function getStreamAll()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStreamAll', []);

        return parent::getStreamAll();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoveSubtitles($removeSubtitles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoveSubtitles', [$removeSubtitles]);

        return parent::setRemoveSubtitles($removeSubtitles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoveSubtitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoveSubtitles', []);

        return parent::getRemoveSubtitles();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomSid($customSid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomSid', [$customSid]);

        return parent::setCustomSid($customSid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomSid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomSid', []);

        return parent::getCustomSid();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannelId($channelId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannelId', [$channelId]);

        return parent::setChannelId($channelId);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelId', []);

        return parent::getChannelId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEpgLang($epgLang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEpgLang', [$epgLang]);

        return parent::setEpgLang($epgLang);
    }

    /**
     * {@inheritDoc}
     */
    public function getEpgLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEpgLang', []);

        return parent::getEpgLang();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoRestart($autoRestart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutoRestart', [$autoRestart]);

        return parent::setAutoRestart($autoRestart);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutoRestart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutoRestart', []);

        return parent::getAutoRestart();
    }

    /**
     * {@inheritDoc}
     */
    public function setPidsCreateChannel($pidsCreateChannel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPidsCreateChannel', [$pidsCreateChannel]);

        return parent::setPidsCreateChannel($pidsCreateChannel);
    }

    /**
     * {@inheritDoc}
     */
    public function getPidsCreateChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPidsCreateChannel', []);

        return parent::getPidsCreateChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCchannelRsources($cchannelRsources)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCchannelRsources', [$cchannelRsources]);

        return parent::setCchannelRsources($cchannelRsources);
    }

    /**
     * {@inheritDoc}
     */
    public function getCchannelRsources()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCchannelRsources', []);

        return parent::getCchannelRsources();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenTimestamps($genTimestamps)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenTimestamps', [$genTimestamps]);

        return parent::setGenTimestamps($genTimestamps);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenTimestamps', []);

        return parent::getGenTimestamps();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdded($added)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdded', [$added]);

        return parent::setAdded($added);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdded', []);

        return parent::getAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeriesNo($seriesNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeriesNo', [$seriesNo]);

        return parent::setSeriesNo($seriesNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeriesNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeriesNo', []);

        return parent::getSeriesNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDirectSource($directSource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDirectSource', [$directSource]);

        return parent::setDirectSource($directSource);
    }

    /**
     * {@inheritDoc}
     */
    public function getDirectSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDirectSource', []);

        return parent::getDirectSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setTvArchiveDuration($tvArchiveDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTvArchiveDuration', [$tvArchiveDuration]);

        return parent::setTvArchiveDuration($tvArchiveDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getTvArchiveDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTvArchiveDuration', []);

        return parent::getTvArchiveDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setTvArchiveServerId($tvArchiveServerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTvArchiveServerId', [$tvArchiveServerId]);

        return parent::setTvArchiveServerId($tvArchiveServerId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTvArchiveServerId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTvArchiveServerId', []);

        return parent::getTvArchiveServerId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTvArchivePid($tvArchivePid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTvArchivePid', [$tvArchivePid]);

        return parent::setTvArchivePid($tvArchivePid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTvArchivePid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTvArchivePid', []);

        return parent::getTvArchivePid();
    }

    /**
     * {@inheritDoc}
     */
    public function setMovieSymlink($movieSymlink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMovieSymlink', [$movieSymlink]);

        return parent::setMovieSymlink($movieSymlink);
    }

    /**
     * {@inheritDoc}
     */
    public function getMovieSymlink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMovieSymlink', []);

        return parent::getMovieSymlink();
    }

    /**
     * {@inheritDoc}
     */
    public function setRedirectStream($redirectStream)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRedirectStream', [$redirectStream]);

        return parent::setRedirectStream($redirectStream);
    }

    /**
     * {@inheritDoc}
     */
    public function getRedirectStream()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRedirectStream', []);

        return parent::getRedirectStream();
    }

    /**
     * {@inheritDoc}
     */
    public function setRtmpOutput($rtmpOutput)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRtmpOutput', [$rtmpOutput]);

        return parent::setRtmpOutput($rtmpOutput);
    }

    /**
     * {@inheritDoc}
     */
    public function getRtmpOutput()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRtmpOutput', []);

        return parent::getRtmpOutput();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', [$number]);

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', []);

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowRecord($allowRecord)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowRecord', [$allowRecord]);

        return parent::setAllowRecord($allowRecord);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowRecord()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowRecord', []);

        return parent::getAllowRecord();
    }

    /**
     * {@inheritDoc}
     */
    public function setProbesizeOndemand($probesizeOndemand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProbesizeOndemand', [$probesizeOndemand]);

        return parent::setProbesizeOndemand($probesizeOndemand);
    }

    /**
     * {@inheritDoc}
     */
    public function getProbesizeOndemand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProbesizeOndemand', []);

        return parent::getProbesizeOndemand();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomMap($customMap)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomMap', [$customMap]);

        return parent::setCustomMap($customMap);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomMap', []);

        return parent::getCustomMap();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalPush($externalPush)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalPush', [$externalPush]);

        return parent::setExternalPush($externalPush);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalPush()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalPush', []);

        return parent::getExternalPush();
    }

    /**
     * {@inheritDoc}
     */
    public function setDelayMinutes($delayMinutes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDelayMinutes', [$delayMinutes]);

        return parent::setDelayMinutes($delayMinutes);
    }

    /**
     * {@inheritDoc}
     */
    public function getDelayMinutes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDelayMinutes', []);

        return parent::getDelayMinutes();
    }

    /**
     * {@inheritDoc}
     */
    public function setEpg($epg_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEpg', [$epg_id]);

        return parent::setEpg($epg_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getEpg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEpg', []);

        return parent::getEpg();
    }

    /**
     * {@inheritDoc}
     */
    public function setTranscodeProfile($transcode_profile_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTranscodeProfile', [$transcode_profile_id]);

        return parent::setTranscodeProfile($transcode_profile_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTranscodeProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranscodeProfile', []);

        return parent::getTranscodeProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
