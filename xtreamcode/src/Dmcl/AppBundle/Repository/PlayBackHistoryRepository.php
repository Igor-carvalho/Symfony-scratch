<?php

namespace Dmcl\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PlayBackHistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlayBackHistoryRepository extends EntityRepository
{


    public function getTotalPlayback(){

        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->getQuery()
            ->getResult();

    }

    public function getTotalPlaybackOwner($owner){

        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.owner=:owner")
            ->setParameter("owner",$owner)
            ->getQuery()
            ->getResult();

    }

    public function mediaTotalPlayback($media){

        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.mediaType=:media")
            ->setParameter("media",$media)
            ->getQuery()
            ->getResult();

    }
    public function mediaTotalPlaybackOwner($media,$owner="admin"){

        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.mediaType=:media")
            ->andWhere("c.owner=:owner")
            ->setParameter("media",$media)
            ->setParameter("owner",$owner)
            ->getQuery()
            ->getResult();

    }

    public function mediaTotalPlaying($media){
        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.finished=false")
            ->andWhere("c.mediaType=:media")
            ->setParameter("media",$media)
            ->getQuery()
            ->getResult();
    }

    public function mediaTotalPlayingOwner($media,$owner="admin"){
        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.finished=false")
            ->andWhere("c.mediaType=:media")
            ->andWhere("c.owner=:owner")
            ->setParameter("media",$media)
            ->setParameter("owner",$owner)
            ->getQuery()
            ->getResult();
    }

    public function getTotalPlaying(){

        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.finished=false")
            ->getQuery()
            ->getResult();
    }

    public function getTotalPlayingOwner($owner){

        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.finished=false")
            ->andWhere("c.owner=:owner")
            ->setParameter("owner",$owner)
            ->getQuery()
            ->getResult();
    }

    public function getTotalPlayingByMedia($mediaId,$mediType){
        return $count = $this->createQueryBuilder("c")
            ->select('COUNT(c)')
            ->where("c.finished=false")
            ->andWhere("c.mediaType = :mediaType")
            ->andWhere("c.mediaId = :mediaId")
            ->getQuery()
            ->setParameter("mediaType",$mediType)
            ->setParameter("mediaId",$mediaId)
            ->getResult();
    }

//    public function findSuggest($mediaType, $slug,$category, $premium=false, $limit=6)
//    {
//        $em = $this->getEntityManager();
//        $premiumQ = !$premium?"and m.public = true":"";
//        $query= $em->createQueryBuilder()
//            ->select("m")
//            ->from("AppBundle:".($mediaType=="tv"?"Channel":"Vod"), "m")
//            ->join("AppBundle:PlayBackHistory","ph")
//            ->where("m.slug != '$slug' and m.enabled = true $premiumQ and m.category = $category and ph.mediaType = '$mediaType' and ph.mediaId = m.id and ph.finished = false")
//            ->setMaxResults($limit);
//
//        $results =  $query->getQuery()->getResult();
//
//        if(count($results)<$limit){
//            $query = $em->createQueryBuilder()
//                ->select("m")
//                ->from("AppBundle:".($mediaType=="tv"?"Channels":"Video"), "m")
//                ->orWhere("m.slug != '$slug' and m.enabled = true $premiumQ and m.category = $category")
//                ->setMaxResults($limit-count($results));
//            $results2 =  $query->getQuery()->getResult();
//            $results = array_merge($results,$results2);
//            if(count($results)<$limit){
//                $query = $em->createQueryBuilder()
//                    ->select("m")
//                    ->from("AppBundle:".($mediaType=="tv"?"Channels":"Video"), "m")
//                    ->orWhere("m.slug != '$slug' and m.enabled = true $premiumQ")
//                    ->orderBy("m.totalPlayback","DESC")
//                    ->setMaxResults($limit-count($results));
//                $results2 =  $query->getQuery()->getResult();
//                $results = array_merge($results,$results2);
//            }
//        }
//        return $results;
//    }



    public function findForPlayFinished($startAt)
    {
        $em = $this->getEntityManager();
        $query= $em->createQueryBuilder()
            ->select("pbh")
            ->from("AppBundle:PlayBackHistory", "pbh")
            ->where("pbh.finished = false and pbh.startAt <= :startAt")
            ->setParameter("startAt",$startAt);

        return $query->getQuery()->getResult();
    }
}
