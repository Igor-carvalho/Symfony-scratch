<?php

namespace Proxies\__CG__\Dmcl\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TicketsResellers extends \Dmcl\AppBundle\Entity\TicketsResellers implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'status', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'fromRead', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'toRead', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'createdAt', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'tickets', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'from', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'to', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'issue'];
        }

        return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'status', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'fromRead', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'toRead', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'createdAt', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'tickets', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'from', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'to', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\TicketsResellers' . "\0" . 'issue'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TicketsResellers $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setFromRead($fromRead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFromRead', [$fromRead]);

        return parent::setFromRead($fromRead);
    }

    /**
     * {@inheritDoc}
     */
    public function getFromRead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFromRead', []);

        return parent::getFromRead();
    }

    /**
     * {@inheritDoc}
     */
    public function setToRead($toRead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToRead', [$toRead]);

        return parent::setToRead($toRead);
    }

    /**
     * {@inheritDoc}
     */
    public function getToRead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToRead', []);

        return parent::getToRead();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addTicket(\Dmcl\AppBundle\Entity\TicketsRepliesResellers $ticket)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTicket', [$ticket]);

        return parent::addTicket($ticket);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTicket(\Dmcl\AppBundle\Entity\TicketsRepliesResellers $ticket)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTicket', [$ticket]);

        return parent::removeTicket($ticket);
    }

    /**
     * {@inheritDoc}
     */
    public function getTickets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTickets', []);

        return parent::getTickets();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrom($from)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrom', [$from]);

        return parent::setFrom($from);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrom', []);

        return parent::getFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setTo($to)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTo', [$to]);

        return parent::setTo($to);
    }

    /**
     * {@inheritDoc}
     */
    public function getTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTo', []);

        return parent::getTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setIssue($issue = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIssue', [$issue]);

        return parent::setIssue($issue);
    }

    /**
     * {@inheritDoc}
     */
    public function getIssue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIssue', []);

        return parent::getIssue();
    }

}
