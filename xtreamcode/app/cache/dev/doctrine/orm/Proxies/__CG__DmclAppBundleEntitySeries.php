<?php

namespace Proxies\__CG__\Dmcl\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Series extends \Dmcl\AppBundle\Entity\Series implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'title', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'categoryId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'cover', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'coverBig', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'genre', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'plot', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'cast', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'rating', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'director', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'releasedate', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'lastModified', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'tmdbId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'seasons', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'episodeRunTime', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'backdropPath', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'youtubeTrailer'];
        }

        return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'title', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'categoryId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'cover', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'coverBig', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'genre', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'plot', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'cast', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'rating', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'director', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'releasedate', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'lastModified', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'tmdbId', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'seasons', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'episodeRunTime', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'backdropPath', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Series' . "\0" . 'youtubeTrailer'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Series $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryId($categoryId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryId', [$categoryId]);

        return parent::setCategoryId($categoryId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryId', []);

        return parent::getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCover($cover)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCover', [$cover]);

        return parent::setCover($cover);
    }

    /**
     * {@inheritDoc}
     */
    public function getCover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCover', []);

        return parent::getCover();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverBig($coverBig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverBig', [$coverBig]);

        return parent::setCoverBig($coverBig);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverBig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverBig', []);

        return parent::getCoverBig();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenre($genre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenre', [$genre]);

        return parent::setGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenre', []);

        return parent::getGenre();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlot($plot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlot', [$plot]);

        return parent::setPlot($plot);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlot', []);

        return parent::getPlot();
    }

    /**
     * {@inheritDoc}
     */
    public function setCast($cast)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCast', [$cast]);

        return parent::setCast($cast);
    }

    /**
     * {@inheritDoc}
     */
    public function getCast()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCast', []);

        return parent::getCast();
    }

    /**
     * {@inheritDoc}
     */
    public function setRating($rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRating', [$rating]);

        return parent::setRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRating', []);

        return parent::getRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setDirector($director)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDirector', [$director]);

        return parent::setDirector($director);
    }

    /**
     * {@inheritDoc}
     */
    public function getDirector()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDirector', []);

        return parent::getDirector();
    }

    /**
     * {@inheritDoc}
     */
    public function setReleasedate($releasedate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReleasedate', [$releasedate]);

        return parent::setReleasedate($releasedate);
    }

    /**
     * {@inheritDoc}
     */
    public function getReleasedate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReleasedate', []);

        return parent::getReleasedate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastModified($lastModified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastModified', [$lastModified]);

        return parent::setLastModified($lastModified);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastModified', []);

        return parent::getLastModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setTmdbId($tmdbId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTmdbId', [$tmdbId]);

        return parent::setTmdbId($tmdbId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTmdbId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTmdbId', []);

        return parent::getTmdbId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeasons($seasons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeasons', [$seasons]);

        return parent::setSeasons($seasons);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeasons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeasons', []);

        return parent::getSeasons();
    }

    /**
     * {@inheritDoc}
     */
    public function setEpisodeRunTime($episodeRunTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEpisodeRunTime', [$episodeRunTime]);

        return parent::setEpisodeRunTime($episodeRunTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEpisodeRunTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEpisodeRunTime', []);

        return parent::getEpisodeRunTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackdropPath($backdropPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackdropPath', [$backdropPath]);

        return parent::setBackdropPath($backdropPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackdropPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackdropPath', []);

        return parent::getBackdropPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setYoutubeTrailer($youtubeTrailer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYoutubeTrailer', [$youtubeTrailer]);

        return parent::setYoutubeTrailer($youtubeTrailer);
    }

    /**
     * {@inheritDoc}
     */
    public function getYoutubeTrailer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYoutubeTrailer', []);

        return parent::getYoutubeTrailer();
    }

}
