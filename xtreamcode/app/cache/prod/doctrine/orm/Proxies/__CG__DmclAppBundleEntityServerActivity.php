<?php

namespace Proxies\__CG__\Dmcl\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ServerActivity extends \Dmcl\AppBundle\Entity\ServerActivity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'pid', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'bandwidth', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'dateStart', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'dateEnd', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'sourceServer', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'destServer', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'stream'];
        }

        return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'pid', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'bandwidth', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'dateStart', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'dateEnd', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'sourceServer', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'destServer', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\ServerActivity' . "\0" . 'stream'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ServerActivity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPid($pid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPid', [$pid]);

        return parent::setPid($pid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPid', []);

        return parent::getPid();
    }

    /**
     * {@inheritDoc}
     */
    public function setBandwidth($bandwidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBandwidth', [$bandwidth]);

        return parent::setBandwidth($bandwidth);
    }

    /**
     * {@inheritDoc}
     */
    public function getBandwidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBandwidth', []);

        return parent::getBandwidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStart($dateStart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStart', [$dateStart]);

        return parent::setDateStart($dateStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStart', []);

        return parent::getDateStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnd($dateEnd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnd', [$dateEnd]);

        return parent::setDateEnd($dateEnd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnd', []);

        return parent::getDateEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourceServer(\Dmcl\AppBundle\Entity\StreamingServers $sourceServer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourceServer', [$sourceServer]);

        return parent::setSourceServer($sourceServer);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceServer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceServer', []);

        return parent::getSourceServer();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestServer(\Dmcl\AppBundle\Entity\StreamingServers $destServer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestServer', [$destServer]);

        return parent::setDestServer($destServer);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestServer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestServer', []);

        return parent::getDestServer();
    }

    /**
     * {@inheritDoc}
     */
    public function setStream(\Dmcl\AppBundle\Entity\Streams $stream = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStream', [$stream]);

        return parent::setStream($stream);
    }

    /**
     * {@inheritDoc}
     */
    public function getStream()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStream', []);

        return parent::getStream();
    }

}
