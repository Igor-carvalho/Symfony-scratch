<?php

namespace Proxies\__CG__\Dmcl\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Server extends \Dmcl\AppBundle\Entity\Server implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'name', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'enabled', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'proxyAgent', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'domain', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'ipAddress', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'maxConnections', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'serverZone', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'port', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'sshPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'sshUsername', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'sshPassword'];
        }

        return ['__isInitialized__', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'id', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'name', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'enabled', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'proxyAgent', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'domain', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'ipAddress', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'maxConnections', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'serverZone', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'port', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'sshPort', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'sshUsername', '' . "\0" . 'Dmcl\\AppBundle\\Entity\\Server' . "\0" . 'sshPassword'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Server $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomain($domain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomain', [$domain]);

        return parent::setDomain($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', []);

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpAddress($ipAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpAddress', [$ipAddress]);

        return parent::setIpAddress($ipAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpAddress', []);

        return parent::getIpAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxConnections($maxConnections)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxConnections', [$maxConnections]);

        return parent::setMaxConnections($maxConnections);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxConnections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxConnections', []);

        return parent::getMaxConnections();
    }

    /**
     * {@inheritDoc}
     */
    public function setSshPort($sshPort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSshPort', [$sshPort]);

        return parent::setSshPort($sshPort);
    }

    /**
     * {@inheritDoc}
     */
    public function getSshPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSshPort', []);

        return parent::getSshPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setSshUsername($sshUsername)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSshUsername', [$sshUsername]);

        return parent::setSshUsername($sshUsername);
    }

    /**
     * {@inheritDoc}
     */
    public function getSshUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSshUsername', []);

        return parent::getSshUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setSshPassword($sshPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSshPassword', [$sshPassword]);

        return parent::setSshPassword($sshPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getSshPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSshPassword', []);

        return parent::getSshPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setServerZone(\Dmcl\AppBundle\Entity\ServersZone $serverZone = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServerZone', [$serverZone]);

        return parent::setServerZone($serverZone);
    }

    /**
     * {@inheritDoc}
     */
    public function getServerZone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServerZone', []);

        return parent::getServerZone();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getPort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPort', []);

        return parent::getPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setPort($port)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPort', [$port]);

        return parent::setPort($port);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function isProxyAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isProxyAgent', []);

        return parent::isProxyAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function setProxyAgent($proxyAgent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProxyAgent', [$proxyAgent]);

        return parent::setProxyAgent($proxyAgent);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getProxyAgent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProxyAgent', []);

        return parent::getProxyAgent();
    }

}
